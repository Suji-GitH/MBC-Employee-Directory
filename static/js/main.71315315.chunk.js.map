{"version":3,"sources":["components/Header.js","components/SearchBar.js","components/EmployeeDetails.js","components/EmployeeTable.js","utils/API.js","components/Main.js","App.js","index.js"],"names":["Header","Navbar","id","Brand","Component","Search","props","Form","Control","type","placeholder","onChange","this","filterByName","Text","muted","icon","faSearch","Employee","order","image","name","cell","email","src","alt","EmployeesTable","renderEmployee","employee","index","undefined","display","EmployeeDetails","key","className","scope","title","onClick","sortAlpha","employees","sortArrow","map","axios","require","get","EmployeesDirectory","state","query","sortedEmployees","sortType","createNewEmployeesList","newEmployeesList","first","last","picture","large","setState","event","target","value","newEmployeeTable","length","toLowerCase","indexOf","sort","dynamicSort","property","sortOrder","substr","a","b","localeCompare","loadAllEmployees","API","then","res","data","results","catch","err","console","log","employeesList","sortState","SearchBar","EmployeeTable","App","Main","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71315315.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport '../css/style.css';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar id=\"header\">\r\n                <Navbar.Brand id=\"headerTitle\">Employee Directory</Navbar.Brand>\r\n            </Navbar>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Search extends Component {\r\n\r\n    render(props) {\r\n        return (\r\n            <>\r\n                <Form.Control id=\"search\" type=\"text\" placeholder=\"Search User by name...\" onChange={this.props.filterByName} />\r\n                <Form.Text id=\"searchHelpBlock\" muted>\r\n                <FontAwesomeIcon icon={faSearch}  />\r\n                     Search User by Name or click on the \"Name\" column header to sort by alphabetical order\r\n                </Form.Text>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from \"react\";\r\nimport '../css/style.css';\r\n\r\nclass Employee extends Component {\r\n\r\n    render(props) {\r\n\r\n        const { order, image, name, cell, email} = this.props;\r\n        \r\n        return (\r\n            <tr>\r\n                <td>{order}</td>\r\n                <td><img src={image} alt={name} /></td>\r\n                <td>{name}</td>\r\n                <td>{cell}</td>\r\n                <td>{email}</td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Employee;","import React, { Component } from \"react\";\r\nimport EmployeeDetails from './EmployeeDetails';\r\n\r\nclass EmployeesTable extends Component {\r\n\r\n    renderEmployee = (employee, index) => {\r\n\r\n        let displayed;\r\n\r\n        if (employee.display === undefined) {\r\n            displayed = true;\r\n        } else {\r\n            displayed = employee.display;\r\n        }\r\n\r\n        if (displayed === true) {\r\n            return (\r\n                <EmployeeDetails \r\n                    key={index}\r\n                    order={index + 1}\r\n                    image={employee.image}\r\n                    name={employee.name}\r\n                    cell={employee.cell}\r\n                    email={employee.email}\r\n                />\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    render(props) {\r\n        \r\n        return (\r\n            <table className=\"table table-bordered table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Avatar</th>\r\n                        <th scope=\"col\" className=\"clickable\" title=\"Sort alphabetically\" \r\n                            onClick={() => this.props.sortAlpha(this.props.employees)}>Name {this.props.sortArrow}</th>\r\n                        <th scope=\"col\">Mobile</th>\r\n                        <th scope=\"col\">Email</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        this.props.employees.map((employee, index) => (\r\n                            this.renderEmployee(employee, index)\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default EmployeesTable;","const axios = require('axios');\r\n\r\nexport default {\r\n  getEmployees: function() {\r\n    return axios.get('https://randomuser.me/api/?inc=name,email,picture,cell&nat=AU&results=50');\r\n   \r\n    // https://randomuser.me/api/?inc=name,email,dob,picture,phone&nat=us&results=50\r\n  }\r\n};","import React, { Component } from \"react\";\r\nimport Header from './Header';\r\nimport SearchBar from './SearchBar';\r\nimport EmployeeTable from './EmployeeTable';\r\nimport API from \"../utils/API\";\r\n\r\nclass EmployeesDirectory extends Component {\r\n\r\n    state = {\r\n        employees: [],\r\n        query: '',\r\n        sortedEmployees: [],\r\n        sortType: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n       this.loadAllEmployees();\r\n    }\r\n\r\n    loadAllEmployees() {\r\n        API.getEmployees()\r\n        .then(res => { \r\n            this.createNewEmployeesList(res.data.results);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    createNewEmployeesList = employees => {\r\n\r\n        const newEmployeesList = employees.map((employee => {\r\n\r\n            return (\r\n                {\r\n                    email: employee.email,\r\n                    name: `${employee.name.first} ${employee.name.last}`,\r\n                    cell: employee.cell,\r\n                    image: employee.picture.large\r\n                }\r\n            )\r\n\r\n        }))\r\n\r\n        this.setState({\r\n            employees: newEmployeesList\r\n        })\r\n    }\r\n\r\n     //Filter by search input:\r\n     filterByName = event => {\r\n\r\n        const query = event.target.value;\r\n\r\n         this.setState({\r\n            query\r\n        }, () => {\r\n\r\n            let employeesList;\r\n\r\n            if (this.state.sortedEmployees.length > 0) {\r\n                employeesList = this.state.sortedEmployees;\r\n            } else {\r\n                employeesList = this.state.employees;\r\n            }\r\n           \r\n            //add display: true/false to display the record if it matches the search string:\r\n            const newEmployeeTable = employeesList.map(employee => {\r\n                let name = employee.name.toLowerCase();\r\n\r\n                if (name.indexOf(this.state.query.toLowerCase()) !== -1) {\r\n                    return {...employee, display: true}\r\n                } else {\r\n                    return {...employee, display: false}\r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                employees: newEmployeeTable,\r\n                sortedEmployees: newEmployeeTable\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    //sort employees alphabetically by some name key:\r\n    sortAlpha = employees => {\r\n\r\n        const sortType = this.state.sortType;\r\n\r\n        if (sortType === 'desc' || sortType === '') {\r\n            //sort alpha ascending order:\r\n            employees.sort(this.dynamicSort(\"name\"));\r\n            this.setState({\r\n                sortedEmployees: employees,\r\n                sortType: 'asc'\r\n            });\r\n        } else if (sortType === 'asc') {\r\n            //sort alpha descending order:\r\n            employees.sort(this.dynamicSort(\"-name\"));\r\n            this.setState({\r\n                sortedEmployees: employees,\r\n                sortType: 'desc'\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    //reorders employees list alphabetically\r\n    dynamicSort = property => {\r\n\r\n        var sortOrder = 1;\r\n\r\n        if(property[0] === \"-\") {\r\n            sortOrder = -1;\r\n            property = property.substr(1);\r\n        }\r\n\r\n        return function (a,b) {\r\n            if (sortOrder === -1) {\r\n                return b[property].localeCompare(a[property]);\r\n            } else {\r\n                return a[property].localeCompare(b[property]);\r\n            }        \r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let employeesList;\r\n\r\n        if (this.state.sortedEmployees.length > 0) {\r\n            employeesList = this.state.sortedEmployees;\r\n        } else {\r\n            employeesList = this.state.employees;\r\n        }\r\n\r\n        let sortArrow;\r\n\r\n        const sortState = this.state.sortType;\r\n\r\n        if (sortState === 'asc') {\r\n            //down arrow\r\n            sortArrow = <span>&#9660;</span>;\r\n        } else if (sortState === 'desc') {\r\n            //up arrow\r\n            sortArrow = <span>&#9650;</span>;\r\n        } else {\r\n            sortArrow = '';\r\n        }\r\n\r\n        return(\r\n            <>\r\n                <Header />\r\n                <SearchBar filterByName={this.filterByName} query={this.state.query} />\r\n                <EmployeeTable employees={employeesList} sortAlpha={this.sortAlpha} sortArrow={sortArrow}  />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EmployeesDirectory;","import React from 'react';\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <>\n    <Main />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}